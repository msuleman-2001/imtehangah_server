# Generated by Django 5.0.11 on 2025-03-17 11:58

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('usermanagement', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelManagers(
            name='student',
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AlterModelManagers(
            name='teacher',
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.RenameField(
            model_name='student',
            old_name='student_name',
            new_name='department',
        ),
        migrations.RenameField(
            model_name='student',
            old_name='student_email',
            new_name='email',
        ),
        migrations.RenameField(
            model_name='student',
            old_name='student_id',
            new_name='id',
        ),
        migrations.RenameField(
            model_name='student',
            old_name='is_enable',
            new_name='is_active',
        ),
        migrations.RenameField(
            model_name='student',
            old_name='student_phone',
            new_name='phone',
        ),
        migrations.RenameField(
            model_name='teacher',
            old_name='teacher_name',
            new_name='department',
        ),
        migrations.RenameField(
            model_name='teacher',
            old_name='teacher_email',
            new_name='email',
        ),
        migrations.RenameField(
            model_name='teacher',
            old_name='teacher_id',
            new_name='id',
        ),
        migrations.RenameField(
            model_name='teacher',
            old_name='is_enable',
            new_name='is_active',
        ),
        migrations.RenameField(
            model_name='teacher',
            old_name='teacher_phone',
            new_name='phone',
        ),
        migrations.RemoveField(
            model_name='student',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='student',
            name='student_password',
        ),
        migrations.RemoveField(
            model_name='student',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='teacher_password',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='updated_by',
        ),
        migrations.AddField(
            model_name='student',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        migrations.AddField(
            model_name='student',
            name='first_name',
            field=models.CharField(default='Unknown', max_length=50),
        ),
        migrations.AddField(
            model_name='student',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='student_groups', to='auth.group'),
        ),
        migrations.AddField(
            model_name='student',
            name='is_staff',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='student',
            name='is_superuser',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='student',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True, verbose_name='last login'),
        ),
        migrations.AddField(
            model_name='student',
            name='last_name',
            field=models.CharField(default='Unknown', max_length=50),
        ),
        migrations.AddField(
            model_name='student',
            name='password',
            field=models.CharField(default='pbkdf2_sha256$720000$j7AOS2RGESYBdQ120Wrnc3$G+LbuVBIatlVOEvvVCXy0316nre6ocOKEgIq+wWOL9A=', max_length=128),
        ),
        migrations.AddField(
            model_name='student',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, related_name='student_permissions', to='auth.permission'),
        ),
        migrations.AddField(
            model_name='student',
            name='user_type',
            field=models.CharField(choices=[('ADMIN', 'Admin'), ('TEACHER', 'Teacher'), ('STUDENT', 'Student')], default='STUDENT', max_length=50),
        ),
        migrations.AddField(
            model_name='student',
            name='username',
            field=models.CharField(default='Unknown', error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='teacher',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        migrations.AddField(
            model_name='teacher',
            name='first_name',
            field=models.CharField(default='Unknown', max_length=50),
        ),
        migrations.AddField(
            model_name='teacher',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='teacher_groups', to='auth.group'),
        ),
        migrations.AddField(
            model_name='teacher',
            name='is_staff',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='teacher',
            name='is_superuser',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='teacher',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True, verbose_name='last login'),
        ),
        migrations.AddField(
            model_name='teacher',
            name='last_name',
            field=models.CharField(default='Unknown', max_length=50),
        ),
        migrations.AddField(
            model_name='teacher',
            name='password',
            field=models.CharField(default='pbkdf2_sha256$720000$j7AOS2RGESYBdQ120Wrnc3$G+LbuVBIatlVOEvvVCXy0316nre6ocOKEgIq+wWOL9A=', max_length=128),
        ),
        migrations.AddField(
            model_name='teacher',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, related_name='teacher_permissions', to='auth.permission'),
        ),
        migrations.AddField(
            model_name='teacher',
            name='user_type',
            field=models.CharField(choices=[('ADMIN', 'Admin'), ('TEACHER', 'Teacher'), ('STUDENT', 'Student')], default='STUDENT', max_length=50),
        ),
        migrations.AddField(
            model_name='teacher',
            name='username',
            field=models.CharField(default='Unknown', error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username'),
            preserve_default=False,
        ),
    ]
